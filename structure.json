{
  "src": {
    "app": {
      "registro": {
        "page.tsx": "'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { Eye, EyeOff, Calendar, Mail, User } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { useToast } from '@/hooks/use-toast'  \r\n\r\nexport default function RegisterPage() {\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false) \r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [mensaje, setError] = useState<string | null>(null)\r\n  console.log(mensaje)\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    apellido: '',\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n  const [passwordError, setPasswordError] = useState('')\r\n\r\n  const togglePasswordVisibility = (field: 'password' | 'confirmPassword') => {\r\n    if (field === 'password') {\r\n      setShowPassword(!showPassword)\r\n    } else {\r\n      setShowConfirmPassword(!showConfirmPassword)\r\n    }\r\n  }\r\n\r\n  const { toast } = useToast()\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({ ...prev, [name]: value }))\r\n    if (name === 'confirmPassword' || name === 'password') {\r\n      setPasswordError('')\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setPasswordError(\"Las contraseñas no coinciden.\")\r\n      return\r\n    }\r\n    console.log({\r\n      \"nombre\": formData.nombre,\r\n      \"apellido\": formData.apellido,\r\n      \"email\": formData.email,\r\n      \"username\": formData.username,\r\n      \"password\": formData.password,\r\n      \"avatar_url\": '',\r\n      \"role\": 2\r\n    })\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8088/api/v1/public/crearUsuarios', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"nombre\":     formData.nombre,\r\n          \"apellido\":   formData.apellido,\r\n          \"email\":      formData.email,\r\n          \"username\":   formData.username,\r\n          \"password\":   formData.password,\r\n          \"avatar_url\": '',\r\n          \"role\":       2\r\n        }),\r\n      })\r\n      // {\r\n      //  \"nombre\":     \"Brendin\",\r\n      //  \"apellido\":   \"Minger\",\r\n      //  \"email\":      \"bminger3@berkeley.edu\",\r\n      //  \"username\":   \"bminger3\",\r\n      //  \"password\":   \"tH4FXLf9UC~fnW\",\r\n      //  \"avatar_url\": \"http://dummyimage.com/104x100.png/ff4444/ffffff\",\r\n      //  \"role\":       1\r\n      // },\r\n\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al registrar. Por favor, intenta de nuevo.')\r\n      }\r\n      console.log(response)\r\n      toast({\r\n        title: \"Registro exitoso\",\r\n        description: \"Tu cuenta ha sido creada exitosamente.\",\r\n      })\r\n    } catch (error: any) {\r\n      setError(error.message ?? \"\")\r\n      toast({\r\n        title: \"Error\",\r\n        description: mensaje ?? \"Error al registrar. Por favor, intenta de nuevo.\",\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-400 via-pink-500 to-red-500 flex items-center justify-center p-4\">\r\n      <div className=\"max-h-screen w-full max-w-2xl bg-white rounded-lg shadow-xl overflow-hidden\">\r\n        <div className=\"p-4 sm:p-6 md:p-8\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <Calendar className=\"h-10 w-10 text-purple-600\" />\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-center text-gray-700 mb-4\">\r\n            Regístrate en EventoPro\r\n          </h2>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className='flex flex-row space-x-4'>\r\n              <div className=\"space-y-2 w-full\">\r\n                <Label htmlFor=\"nombre\">Nombre</Label>\r\n                <div className=\"flex flex-row\">\r\n                  <Input id=\"nombre\" name=\"nombre\" className='w-[85%]' placeholder=\"Tu Nombre\" type=\"text\" required value={formData.nombre} onChange={handleInputChange} />\r\n                  <User className=\"h-5 w-5 m-auto text-gray-500\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2 w-full\">\r\n                <Label htmlFor=\"apellido\">Apellido</Label>\r\n                <div className=\"flex flex-row\">\r\n                  <Input id=\"apellido\" name=\"apellido\" className='w-[85%]' placeholder=\"Tu Apellido\" type=\"text\" required value={formData.apellido} onChange={handleInputChange} />\r\n                 <User className=\"h-5 w-5 m-auto text-gray-500\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='flex flex-row space-x-4'>\r\n              <div className=\"space-y-2 w-full\">\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <div className=\"flex flex-row\">\r\n                  <Input id=\"username\" name=\"username\" className='w-[85%]' placeholder=\"Nombre de Usuario\" type=\"text\" required value={formData.username} onChange={handleInputChange}/>\r\n                 <User className=\"h-5 w-5 m-auto text-gray-500\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2 w-full\">\r\n                <Label htmlFor=\"email\">Correo Electrónico</Label>\r\n                <div className=\"flex flex-row\">\r\n                  <Input id=\"email\" name=\"email\" className='w-[85%]' placeholder=\"tu@ejemplo.com\" type=\"email\" autoCapitalize=\"none\" autoComplete=\"email\" autoCorrect=\"off\" required value={formData.email} onChange={handleInputChange} />\r\n                  <Mail className=\"h-5 w-5 m-auto text-gray-500\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='flex flex-row space-x-4'>\r\n              <div className=\"space-y-2 w-full\">\r\n                <Label htmlFor=\"password\">Contraseña</Label>\r\n                <div className=\"flex flex-row\">\r\n                  <Input id=\"password\" name=\"password\" className='w-[85%]' type={showPassword ? \"text\" : \"password\"} required value={formData.password} onChange={handleInputChange} />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => togglePasswordVisibility('password')}\r\n                    className=\"h-5 w-5 m-auto text-gray-500\"\r\n                    aria-label={showPassword ? \"Ocultar contraseña\" : \"Mostrar contraseña\"}\r\n                  >\r\n                    {showPassword ? (\r\n                      <EyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                    ) : (\r\n                      <Eye className=\"h-4 w-4 text-gray-500\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2 w-full\">\r\n                <Label htmlFor=\"confirmPassword\">Confirmar Contraseña</Label>\r\n                <div className=\"flex flex-row\">\r\n                  <Input id=\"confirmPassword\" name=\"confirmPassword\" className='w-[85%]' type={showConfirmPassword ? \"text\" : \"password\"} required value={formData.confirmPassword} onChange={handleInputChange} />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => togglePasswordVisibility('confirmPassword')}\r\n                    className=\"h-5 w-5 m-auto text-gray-500\"\r\n                    aria-label={showConfirmPassword ? \"Ocultar contraseña\" : \"Mostrar contraseña\"}\r\n                  >\r\n                    {showConfirmPassword ? (\r\n                      <EyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                    ) : (\r\n                      <Eye className=\"h-4 w-4 text-gray-500\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {passwordError && (\r\n              <p className=\"text-red-500 text-sm\">{passwordError}</p>\r\n            )}\r\n            <Button type=\"submit\" className=\"w-full bg-purple-600 hover:bg-purple-700\" disabled={isLoading}>\r\n              {isLoading ? 'Cargando...' : 'Registrarse'}\r\n            </Button>\r\n          </form>\r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-sm text-gray-600\">\r\n              ¿Ya tienes una cuenta?{\" \"}<a href='/' className=\"text-purple-600 hover:underline\">Inicia Sesión</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"
      }
    }
  }
}